#################################################
#                                               #
#   Config file for neural speech segmentation  #
#                                               #
#################################################


## General experiment parameters

# Absolute path to the corpus
# The corpus directory must be organized as follow
# CORPUS
#   |- mfcc_npy_[input_size]    (where input_size matches the $INPUT value :
#   |                           all feature files as numpy arrays saved under .npy format)
#   |- phn/     (folder containing the gold segmentation for phones in ascii, one boundary time in second per line)
#   |
#   |- syl/     (optional, same for syllable boundaries)
#   |
#   +- wrd/     (optional, same for words)
#
CORPUS=/path/to/corpus

# Name of the experiment (used to creat output directories)
NAME=exp_name

# Name of train/test split (to have consistent splits through several experiments)
SPLIT=name_of_split


## Model specific parameters

# Model type (see kmodels.py)
MODEL=simple_rnn

# Input size of the rnn (mfcc size)
INPUT=39

# Size of hidden layer
HIDDEN=20

# Optimization routine (see keras doc)
OPTIM=rmsprop

# Loss function (see keras doc)
LOSS=mse

# BPTT backprop time span
SPAN=7

## Post processing parameters

# Post processing method amongst {fourier,auto,manual} (see post_process_rnn_error.py for details)
POST_PROC_METHOD=fourier


## Text to be printed with results (do not modify)

function summarize {
    printf "Automatic segmentation using rnn with : \n\t- model %s\n\t- input size %d\n\t- hidden layer size %d\n\t- optimization method : %s\n\t- loss function : %s\n\t- BPTT nb of frames : %d\n\t- post processing method : %s\n" $MODEL $INPUT $HIDDEN $OPTIM $LOSS $SPAN $POST_PROC_METHOD
}

